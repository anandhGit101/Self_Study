server.port=8011
server.servlet.context-path=/jbtBookingMgmt
spring.application.name=bookingmanagement
# create and drop tables and sequences, loads import.sql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# MySQL settings
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/justbooktickets
spring.datasource.username=root
spring.datasource.password=admin@123
spring.datasource.initialization-mode=always
#spring.datasource.data=classpath:/sql/import.sql
#kafka settings below
kafka.bootstrap-servers=localhost:9092
kafka.topic.json=booking
#spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=com.springboot.justbook.notification.service.NotificationMsgSerializer
#spring.kafka.producer.properties.spring.json.add.type.headers=false
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
logging.level.root=info
logging.config=classpath:logback.xml
#Managing movie management service related endpoints
#moviemgmt.service.getmoviebyname=http://fibrg53096dns.eastus2.cloudapp.azure.com:8007/jbtMovieMgmt/movie/listbyname?movieName={movieName}
#moviemgmt.service.getcinemasbyname=http://fibrg53096dns.eastus2.cloudapp.azure.com:8007/jbtMovieMgmt/cinemas/list?cinemasName={cinemasName}
#moviemgmt.service.getschedule=http://fibrg53096dns.eastus2.cloudapp.azure.com:8007/jbtMovieMgmt/schedules/showdetails
#Managing seat schedule service related endpoints
#seatmgmt.service.insertseatschedule=http://fibrg53096dns.eastus2.cloudapp.azure.com:8007/jbtMovieMgmt/seatsschedule/booked
#moviemgmt.service.putschedule=http://fibrg53096dns.eastus2.cloudapp.azure.com:8007/jbtMovieMgmt/schedules/showdetails

#Managing movie management service related endpoints
moviemgmt.service.getmoviebyname=http://localhost:8007/jbtMovieMgmt/movie/listbyname?movieName={movieName}
moviemgmt.service.getcinemasbyname=http://localhost:8007/jbtMovieMgmt/cinemas/list?cinemasName={cinemasName}
moviemgmt.service.getschedule=http://localhost:8007/jbtMovieMgmt/schedules/showdetails
#Managing seat schedule service related endpoints
seatmgmt.service.insertseatschedule=http://localhost:8007/jbtMovieMgmt/seatsschedule/booked
#Managing booking services related endpoints
moviemgmt.service.putschedule=http://localhost:8007/jbtMovieMgmt/schedules/showdetails